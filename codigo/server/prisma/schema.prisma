generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id               Int      @id @default(autoincrement())
  nome             String
  email            String   @unique
  senha            String
  senha_salt       String?  @db.VarChar(255)
  resetToken       String?  @default("") @db.VarChar(255)
  resetTokenExpiry DateTime? @default(now())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  Leitor           Leitor?
  Autor            Autor?
}

model Leitor {
  id             Int             @id @default(autoincrement())
  usuarioId      Int             @unique
  usuario        Usuario         @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  biblioteca     MeuLivro[]
  avaliacao      AvaliacaoAutor[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Autor {
  id             Int             @id @default(autoincrement())
  mediaAvaliacoes Int?
  usuarioId      Int             @unique
  usuario        Usuario         @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  livrosCriados  Livro[]
  avaliacao      AvaliacaoAutor[]
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
}

model Livro {
  id              Int          @id @default(autoincrement())
  titulo          String
  descricao       String?
  autorId         Int
  autor           Autor        @relation(fields: [autorId], references: [id])
  categoria       Categoria
  imagem          String?
  rate            Float?
  sinopse         String?
  avaliacoes      MeuLivro[]
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}


model MeuLivro {
  id        Int      @id @default(autoincrement())
  leitor    Leitor   @relation(fields: [leitorId], references: [id])
  leitorId  Int
  livro     Livro    @relation(fields: [livroId], references: [id])
  livroId   Int
  avaliacao Int?
  status    Tipo?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AvaliacaoAutor {
  id         Int      @id @default(autoincrement())
  leitor     Leitor   @relation(fields: [leitorId], references: [id], onDelete: Cascade)
  leitorId   Int
  autor      Autor    @relation(fields: [autorId], references: [id], onDelete: Cascade)
  autorId    Int
  avaliacao  Int
  dataCriacao DateTime @default(now())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum Tipo {
    FAVORITO
    DESEJO
    LIDO
}

enum Categoria {
    Drama
    Suspense
    Comedia
    Romance
}
